#include <iostream>
/*
n个按钮（<30）
要求输入按钮数，
以及最转密码锁的状态

要对输入的两个字符串，进行拆分，然后放到数组里面
1、要创建一个拆分字符串的函数
2、创建一个 

输出最少需要按的次数
若不可能输出impossible
*/
int main() 
{
	/*
	字符串  可用 字符数组来代替
	
	1、判别 字符数组中实际 内容的长度： 可以 先用结束符 对其进行初始化，然后
	在对其进行相应的赋值，然后可以通过下标的改变，判断出第一次出现 \0 所在的位置，就可以判断出具体的内容长度（从 0开始）
	
	2、对字符数组进行输入时，用 %s 字符串格式控制符，%s 对应的是地址， 所以不用 写 &   
	  
	*/
	char a[2][30]={"\0","\0"};  //1、对字符数组进行初始化，将一个字符串赋给字符数组，a[0] = '\0',由于用字符串赋值，在字符串的末尾会自动加上 '\0',所以 a[1] = '\0' ,字符串长度小于字符数组长度剩下的字符 都补位 '\0' 
	int f = 0;
	
	int b = sizeof(a)/sizeof(char);		//二维数组的总长度 
   	int c = sizeof(a[0])/sizeof(char);		//二维数组每行的长度 

	int d = b/c;		//二维数组的行数 

	for(int k = 0;k< d;k++)
		scanf("%s",a[k]); 		//2、%s 用于字符数组的输入和输出，后面跟的应该是地址 
		
		
	
	while(a[0][f] != '\0')			//3、判定字符串的实际内容的长度 【f 为 实际长度 加 1】
	{	printf("%d\n",f);
		f++;
	}
	
		printf("开始\n");
	for(int i = 0;i <d;i++ )
	{
		for(int u = 0;u < f;u++ )
			printf("%c\t\n",a[i][u]); 
	
	}
		printf("结束\n"); 
		

	printf("f的值为：%d\n",f);
	printf("a[0][%d]的值为：%c\n",(f-1),a[0][f-1]);
	return 0;
}
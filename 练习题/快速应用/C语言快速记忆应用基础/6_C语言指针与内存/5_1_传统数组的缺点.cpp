/*
	传统数组的缺点：
		
		 1、数组长度必须事项制定，且只能是常整数，不能是变量
		
		 2、传统形式定义的数组，该数组的内存，程序员无法手动释放。
			
			数组一旦定义，系统会为该数组分配的存储空间就会一直存在，
			
			除非数组所在的函数运行结束，数组的空间才会被系统释放

		 3、数组的长度一旦定义，其长度就不能再更改
			
			数组的长度不能在函数运行的过程中动态的扩充或缩小。

		 4、A函数定义的数组，在A函数运行的过程请将可以被其他函数调用，
		 
			但是A函数运行完毕后，A函数中的数组就无法被其它函数调用
			

		
*/
#include <stdio.h>

void g(int * pArr, int len)
{
	pArr[2] = 88;  //pArr[2] = a[2]  指针与下标的关系 
}

void f(void)
{
	int a[5] = {1,2,3,4,5};	//20个字节的存储空间程序员无妨手动编程释放它，它只能在本函数运行完毕时由系统自动释放

	g(a,5);

	printf("%d\n",a[2]);
}



int main(void)
{
	f();

	return 0;
}
